<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>